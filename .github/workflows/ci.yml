name: CI
on:
  push:
    branches:
      - main
      - "renovate/**"
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "commits_count_incr=$(($COUNT+1))" >> $GITHUB_ENV
        if: ${{ github.event_name == 'pull_request' }}
        env:
          COUNT: ${{ github.event.pull_request.commits }}
      - uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          fetch-depth: ${{ env.commits_count_incr }}
      - uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
      - id: node-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/.nvmrc') }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm ci
      # Test Git hooks in CI, to make sure script upgrades do not break them.
      - run: npm run prepare
      # Test commit message validation in CI.
      - run: git log -1 --pretty=%B >> latest.log && ./.git/hooks/commit-msg latest.log
      - run: DRAFTJS_VERSION=0.11 npm run test:ci
      - run: DRAFTJS_VERSION=0.10 npm run test
      - run: npx commitlint --from HEAD~${{ github.event.pull_request.commits }} --to HEAD
        if: ${{ github.event_name == 'pull_request' }}
      - run: npx danger ci --verbose
        if: ${{ github.event_name == 'pull_request' }}
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: npm run report:package
      - run: mv coverage/lcov-report build || true
      - run: cat ./coverage/lcov.info | npx coveralls || true
      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
          retention-days: 1
      - run: npx semantic-release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: build
          clean: true
